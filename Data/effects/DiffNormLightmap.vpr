#version 400

layout (location = 0) in vec3 a_position;
layout (location = 1) in vec2 a_coordsDiff;
layout (location = 2) in vec2 a_coordsLightmap;
layout (location = 3) in vec3 a_normal;
layout (location = 4) in vec3 a_tangent;

uniform mat4 u_worldMatrix;
uniform mat4 u_viewProjMatrix;
uniform vec3 u_lightPosition;
uniform vec3 u_eyePosition;

varying vec2 o_coordsDiff;
varying vec2 o_coordsLightmap;
varying vec3 o_lightDirection;
varying vec3 o_halfVector;

void main()
{
	o_coordsDiff = a_coordsDiff;
	o_coordsLightmap = a_coordsLightmap;
	
	vec4 worldPosition = u_worldMatrix * vec4(a_position, 1.0);
	vec3 worldNormal = normalize(mat3(u_worldMatrix) * a_normal);
	vec3 worldTangent = normalize(mat3(u_worldMatrix) * a_tangent);
	
	o_lightDirection = normalize(u_lightPosition - worldPosition.xyz);
	vec3 eyeDirection = normalize(u_eyePosition - worldPosition.xyz);
	o_halfVector = normalize(o_lightDirection + eyeDirection);
	
	vec3 bitangent = cross(worldTangent, worldNormal);
	mat3 worldToTex = mat3(worldTangent, bitangent, worldNormal);
	
	o_lightDirection = worldToTex * o_lightDirection;
	eyeDirection = worldToTex * eyeDirection;
	o_halfVector = normalize(o_lightDirection + eyeDirection);
	
	gl_Position = u_viewProjMatrix * worldPosition;
}
