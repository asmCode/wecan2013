#version 400

layout (location = 0) in vec3 a_position;
layout (location = 1) in vec3 a_normal;

uniform mat4 u_worldMatrix;
uniform mat4 u_viewProjMatrix;
uniform vec3 u_lightPosition;
uniform vec3 u_eyePosition;

varying vec3 o_normal;
varying vec3 o_lightDirection;
varying vec3 o_eyeDirection;
varying vec3 o_halfVector;

void main()
{	
	vec4 worldPosition = u_worldMatrix * vec4(a_position, 1.0);
	o_normal = mat3(u_worldMatrix) * a_normal;
	
	o_lightDirection = normalize(u_lightPosition - worldPosition.xyz);
	o_eyeDirection = normalize(u_eyePosition - worldPosition.xyz);
	o_halfVector = normalize(o_lightDirection + o_eyeDirection);
	
	gl_Position = u_viewProjMatrix * worldPosition;
}
