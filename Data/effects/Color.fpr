#version 400

layout( location = 0 ) out vec4 FragColor;

uniform vec4 u_diffuseColor; // 'w' component as opacity
uniform vec3 u_specularColor;
uniform float u_glossiness; // 0.0 - 256.0 
uniform float u_specularLevel; // 0.0 - 10.0

varying vec3 o_normal;
varying vec3 o_lightDirection;
varying vec3 o_eyeDirection;

void main()
{
	vec3 normal = normalize(o_normal);
	vec3 lightDirection = normalize(o_lightDirection);
	vec3 eyeDirection = normalize(o_eyeDirection);
	
	vec3 halfVector = normalize(lightDirection + eyeDirection);

	float diffValue = max(dot(lightDirection, normal), 0.0);
	float specValue = pow(max(dot(halfVector, normal), 0), u_glossiness) * u_specularLevel;
	
	vec4 diffuseColor = u_diffuseColor;
	diffuseColor.xyz *= diffValue;
	diffuseColor.xyz += u_specularColor * specValue;
	
	FragColor =	diffuseColor;
}

